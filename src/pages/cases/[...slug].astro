---
import Base from "@/layouts/Base.astro";
import Article from "@/components/Article.astro";
import CourseCard from "@/components/CourseCard";
import { getCollection, getEntry } from 'astro:content';
import { navigation, siteData } from "@/consts";

export async function getStaticPaths() {
  async function getCourseData(courseId: string) {
    const courses= await getCollection('courses');
    const course = courses.find((c) => c.data.habitat === courseId);

    if(!course) {
      return { course }
    }

    const curatorId = course.data.curator.toLowerCase();
    const curator = await getEntry('people', curatorId);

    return { course: course?.data, curator: curator?.data }
  }

  const cases = await getCollection('cases');

  const promises = cases.map(async entry => {
    const { course, curator } = await getCourseData(`/cases/${entry.slug}`);
    return {
      params: { slug: entry.slug }, props: { entry, course, curator},
    }});
  return await Promise.all(promises);
}

const { entry, course, curator } = Astro.props;
const { title, description } = entry.data;
const { Content } = await entry.render();
---

<Base {navigation} {siteData}>
  <div class="bg-white py-24 sm:py-32 mx-auto max-w-7xl">
    <div class="mx-auto grid max-w-2xl grid-cols-1 items-start gap-x-16 sm:gap-y-24 lg:mx-0 lg:max-w-none lg:grid-cols-[70%_30%]">
      <Article>
        <p class="text-base font-semibold leading-7 text-indigo-600">{title}</p>
        <h1>{title}</h1>
        <p>{description}</p>
        <Content />
      </Article>
      <div class="relative overflow-hidden lg:max-w-lg flex justify-center my-12 lg:m-0 lg:justify-start">
        { course && <CourseCard course={course} curator={curator} client:load/>}
      </div>
    </div>
  </div>
</Base>
